name: Windows

on:
  # allows us to run workflows manually
  workflow_dispatch:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  main:
    runs-on: windows-2019
    name: 'DAGMC ${{ matrix.cubit }} Build for Windows'
    steps:
        
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          activate-environment: ""


      - name: Conda dependencies
        shell:  bash -l {0}
        run: |
          conda install curl eigen

      - name: HDF5 download
        shell:  bash -l {0}
        run: |
          curl -L https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8/hdf5-1.8.21/bin/hdf5-1.8.21-Std-win7_64-vs14.zip --output hdf5-1.8.21-Std-win7_64-vs14.zip
          unzip hdf5-1.8.21-Std-win7_64-vs14.zip
      - name: HDF5 install
        shell:  cmd
        run: |
          cd hdf
          msiexec.exe /i HDF5-1.8.21-win64.msi /passive /norestart

      - name: Build MOAB
        shell: bash -l {0}
        run: |
          git clone https://bitbucket.org/fathomteam/moab
          mkdir moab_build moab_install
          cd moab_build
          cmake ../moab \
                -DENABLE_BLASLAPACK=OFF \
                -DENABLE_FORTRAN=OFF \
                -DENABLE_IMESH=OFF \
                -DENABLE_TESTING=OFF \
                -DENABLE_HDF5=ON \
                -DBUILD_SHARED_LIBS=ON \
                -G"Visual Studio 16 2019"  \
                -DCMAKE_INSTALL_PREFIX=../moab_install/ \
                -DHDF5_ROOT="C:/Program Files/HDF_Group/HDF5/1.8.21" \
                -DHDF5_hdf5_LIBRARY_RELEASE="C:/Program Files/HDF_Group/HDF5/1.8.21/lib/libhdf5_hl.lib;C:/Program Files/HDF_Group/HDF5/1.8.21/lib/libhdf5.lib;C:/Program Files/HDF_Group/HDF5/1.8.21/lib/libzlib.lib;C:/Program Files/HDF_Group/HDF5/1.8.21/lib/libszip.lib;C:/Program Files/HDF_Group/HDF5/1.8.21/lib/libhdf5_cpp.lib" \
                -DCMAKE_EXE_LINKER_FLAGS="" \
                -DCMAKE_MODULE_LINKER_FLAGS="" \
                -DCMAKE_SHARED_LINKER_FLAGS="" \
                -DCMAKE_STATIC_LINKER_FLAGS="" \
                -DCMAKE_BUILD_TYPE=Release \
                -DCMAKE_C_COMPILER="C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.27.29110/bin/Hostx64/x64/cl.exe" \
                -DCMAKE_CXX_COMPILER="C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.27.29110/bin/Hostx64/x64/cl.exe"
          cmake --build . --config Release
          cmake --install . --config Release


      - name: build DAGMC
        shell: bash -l {0}
        run: |
          cd ${PLUGIN_ABS_PATH}
          mkdir dagmc_build dagmc_install
          git clone https://github.com/bam241/dagmc -b windows
          # cd dagmc
          # git submodule update --init --recursive
          # cd src/pyne
          # ./amalgamate_pyne.sh `pwd` `pwd`

          # cd ../../../dagmc_build
          cd dagmc_build
          cmake ../dagmc \
                -G"Visual Studio 16 2019" \
                -DBUILD_EXE=OFF \
                -DBUILD_SHARED_LIBS=ON \
                -DBUILD_STATIC_LIBS=OFF \
                -DBUILD_TALLY=OFF \
                -DBUILD_BUILD_OBB=OFF \
                -DBUILD_UWUW=ON \
                -DBUILD_MAKE_WATERTIGHT=ON \
                -DBUILD_TESTS=OFF \
                -DMOAB_DIR=../moab_install \
                -DHDF5_ROOT="C:/Program Files/HDF_Group/HDF5/1.8.21" \
                -DHDF5_hdf5_LIBRARY_RELEASE="C:/Program Files/HDF_Group/HDF5/1.8.21/lib/libhdf5_hl.lib;C:/Program Files/HDF_Group/HDF5/1.8.21/lib/libhdf5.lib;C:/Program Files/HDF_Group/HDF5/1.8.21/lib/libzlib.lib;C:/Program Files/HDF_Group/HDF5/1.8.21/lib/libszip.lib;C:/Program Files/HDF_Group/HDF5/1.8.21/lib/libhdf5_cpp.lib" \
                -DCMAKE_INSTALL_PREFIX=../dagmc_install/ \
                -DCMAKE_EXE_LINKER_FLAGS="" \
                -DCMAKE_MODULE_LINKER_FLAGS="" \
                -DCMAKE_SHARED_LINKER_FLAGS="" \
                -DCMAKE_STATIC_LINKER_FLAGS="" \
                -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release
          cmake --install . --config Release


