on:
  push:
    paths:
      - 'CI/*'
    branches: 
      - develop
  pull_request:
    paths:
      - 'CI/*'
    branches: 
      - develop

jobs:
  build-base-img:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ubuntu_versions : [
          18.04,
          # 20.04,
          ]
        isMerged: 
          - ${{ contains(github.event_name, 'push') }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Environment setup
        run: |
          if [ "${{ matrix.isMerged }}" == "false" ]; then
            echo "root_name=dagmc_${{ github.sha }}" >> $GITHUB_ENV
          else
            echo "root_name=dagmc" >> $GITHUB_ENV
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Export Dockerfile_0_base
        uses: docker/build-push-action@v2
        with:
          file: CI/Dockerfile_0_base
          push: true
          context: .
          build-args: |
            UBUNTU_VERSION=${{ matrix.ubuntu_versions }}
          tags: ghcr.io/svalinn/${{ env.root_name }}-ci-ubuntu-${{ matrix.ubuntu_versions }}

  build-housekeeping-img:
    needs: build-base-img
    runs-on: ubuntu-latest
    env:
      hdf5_versions: 1.10.4
      hdf5_build_dir: hdf5_build_dir
    strategy:
      matrix:
        ubuntu_versions : [18.04,]
        isMerged: 
          - ${{ contains(github.event_name, 'push') }}

    steps:
      - name: Environment setup
        run: |
          if [ "${{ matrix.isMerged }}" == "false" ]; then
            echo "root_name=dagmc_${{ github.sha }}" >> $GITHUB_ENV
          else
            echo "root_name=dagmc" >> $GITHUB_ENV
          fi
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Checkout repository
        uses: actions/checkout@v2


      - name: Build and push Dockerfile_1_housekeeping
        uses: docker/build-push-action@v2
        with:
          file: CI/Dockerfile_1_housekeeping
          context: .
          push: true
          build-args: |
            ROOT_NAME=${{ env.root_name }}
            UBUNTU_VERSION=${{ matrix.ubuntu_versions }}
          tags: ghcr.io/svalinn/${{ env.root_name }}-ci-ubuntu-${{ matrix.ubuntu_versions }}-housekeeping


  housekeeping:
    if: ${{ contains(github.event_name, 'pull_request') }}
    needs: [build-housekeeping-img]
    runs-on: ubuntu-latest
    env:
      hdf5_versions: 1.10.4
      hdf5_build_dir: hdf5_build_dir
      
    strategy:
      matrix:
        ubuntu_versions : [18.04,]
        isMerged: 
          - ${{ contains(github.event_name, 'push') }}
        isPR: 
          - ${{ contains(github.event_name, 'pull_request') }}
    container: ghcr.io/svalinn/dagmc_${{ github.sha }}-ci-ubuntu-${{ matrix.ubuntu_versions }}-housekeeping
    steps:
      - name: Environment setup
        run: |
          if [ "${{ matrix.isMerged }}" == "false" ]; then
            echo "root_name=dagmc_${{ github.sha }}" >> $GITHUB_ENV
          else
            echo "root_name=dagmc" >> $GITHUB_ENV
          fi

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Housekeeping
        if:  ${{ matrix.isPR }}
        run: |
          mkdir /root/build_dir/
          echo "REPO_SLUG=${GITHUB_REPOSITORY}" >> $GITHUB_ENV
          echo "PULL_REQUEST=$(echo  $GITHUB_REF | cut -d"/" -f3)" >> $GITHUB_ENV
          ln -s $GITHUB_WORKSPACE /root/build_dir/DAGMC

      - name: Run Housekeeping
        if: ${{ matrix.isPR }}
        run: |
          cd $GITHUB_WORKSPACE
          /bin/bash "CI/scripts/housekeeping.sh"
      
  clean_housekeeping_img:
    if: ${{ contains(github.event_name, 'pull_request') && always() }}
    needs: housekeeping
    runs-on: ubuntu-latest
    env:
      hdf5_versions: 1.10.4
      hdf5_build_dir: hdf5_build_dir
    strategy:
      matrix:
        ubuntu_versions : [18.04,]
        isMerged: 
          - ${{ contains(github.event_name, 'push') }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: delete package
        run: |
          curl \
              -X DELETE \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/orgs/ORG/packages/docker/ghcr.io/svalinn/dagmc_${{ github.sha }}-ci-ubuntu-${{ matrix.ubuntu_versions }}-housekeeping
      # - uses: actions/delete-package-versions@v1
      #   with:
      #     owner: ${{ github.repository_owner }}
      #     package-name: ghcr.io/svalinn/dagmc_${{ github.sha }}-ci-ubuntu-${{ matrix.ubuntu_versions }}-housekeeping
      #     num-old-versions-to-delete: 10

# build-deps-img:
  #   needs: build-base-img
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       ubuntu_versions : [
  #         18.04,
  #         20.04,
  #         ]
  #       compiler : [
  #         gcc,
  #         clang,
  #         ]
  #       hdf5_versions : [
  #         1.10.4,
  #       ]
  #       isMerged: 
  #         - ${{ contains(github.event_name, 'push') }}
  #   steps:
      
  #     - name: Environment setup
  #       run: |
  #         if [ "${{ matrix.isMerged }}" == "false" ]; then
  #           echo "root_name=dagmc_${{ github.sha }}" >> $GITHUB_ENV
  #         else
  #           echo "root_name=dagmc" >> $GITHUB_ENV
  #         fi

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Log in to the Container registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Download artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: ${{ env.root_name }}-ci-ubuntu-${{ matrix.ubuntu_versions }}
  #         path: /tmp

  #     - name: Load image
  #       run: |
  #         docker load --input /tmp/${{ env.root_name }}-ci-ubuntu-${{ matrix.ubuntu_versions }}.tar
  #         docker image ls -a
  
  #     - name: Checkout repository
  #       uses: actions/checkout@v2


  #     - name: Build and push Dockerfile_1_external_deps
  #       uses: docker/build-push-action@v2
  #       with:
  #         file: CI/Dockerfile_1_external_deps
  #         context: .
  #         push: ${{ matrix.isMerged }}
  #         build-args: |
  #           ROOT_NAME=${{ env.root_name }}
  #           UBUNTU_VERSION=${{ matrix.ubuntu_versions }}
  #           COMPILER=${{ matrix.compiler }}
  #         tags: svalinn/${{ env.root_name }}-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}-ext

  #     - name: Build and export Dockerfile_2_hdf5
  #       uses: docker/build-push-action@v2
  #       with:
  #         file: CI/Dockerfile_2_hdf5
  #         context: .
  #         build-args: |
  #           ROOT_NAME=${{ env.root_name }}
  #           UBUNTU_VERSION=${{ matrix.ubuntu_versions }}
  #           COMPILER=${{ matrix.compiler }}
  #           HDF5=${{ matrix.hdf5_versions }}
  #         tags: svalinn/${{ env.root_name }}-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}-ext-hdf5_${{ matrix.hdf5_versions}}
  #         outputs: type=docker,dest=/tmp/${{ env.root_name }}-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}.tar

  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: ${{ env.root_name }}-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}
  #         path: /tmp/${{ env.root_name }}-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}.tar
  #         retention-days: 1

  # build-moab-img:
  #   needs: build-deps-img
  #   runs-on: ubuntu-latest
  #   env:
  #     hdf5_versions: 1.10.4
  #     hdf5_build_dir: hdf5_build_dir
  #   strategy:
  #     matrix:
  #       ubuntu_versions : [
  #         18.04,
  #         20.04,
  #         ]
  #       compiler : [
  #         gcc,
  #         clang,
  #         ]
  #       hdf5_versions : [
  #         1.10.4,
  #       ]
  #       moab_versions : [
  #         9c96d17,
  #         develop,
  #         master,
  #       ]
  #       isMerged: 
  #         - ${{ contains(github.event_name, 'push') }}

  #   steps:
      
  #     - name: Environment setup
  #       run: |
  #         if [ "${{ matrix.isMerged }}" == "false" ]; then
  #           echo "root_name=dagmc_${{ github.sha }}" >> $GITHUB_ENV
  #         else
  #           echo "root_name=dagmc" >> $GITHUB_ENV
  #         fi

  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Log in to the Container registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Download artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: ${{ env.root_name }}-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}
  #         path: /tmp

  #     - name: Load image
  #       run: |
  #         docker load --input /tmp/${{ env.root_name }}-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}.tar
  #         docker image ls -a
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Build and push Dockerfile_3_moab
  #       uses: docker/build-push-action@v2
  #       with:
  #         file: CI/Dockerfile_3_moab
  #         context: .
  #         push: ${{ matrix.isMerged }}
  #         build-args: |
  #           UBUNTU_VERSION=${{ matrix.ubuntu_versions }}
  #           ROOT_NAME=${{ env.root_name }}
  #           COMPILER=${{ matrix.compiler }}
  #           HDF5=${{ matrix.hdf5_versions }}
  #           MOAB=${{ matrix.moab_versions }}
  #         tags: svalinn/${{ env.root_name }}-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}-ext-hdf5_${{ matrix.hdf5_versions}}-moab_${{ matrix.moab_versions }}
  #         outputs: type=docker,dest=/tmp/${{ env.root_name }}-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}-ext-hdf5_${{ matrix.hdf5_versions}}-moab_${{ matrix.moab_versions }}.tar

  #     - name: Upload artifact
  #       if: ${{ contains(github.event_name, 'pull_request') }}
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: ${{ env.root_name }}-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}-ext-hdf5_${{ matrix.hdf5_versions}}-moab_${{ matrix.moab_versions }}
  #         path: /tmp/${{ env.root_name }}-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}-ext-hdf5_${{ matrix.hdf5_versions}}-moab_${{ matrix.moab_versions }}.tar
  #         retention-days: 1
  
  # test_img:
  #   if: ${{ contains(github.event_name, 'pull_request') }}
  #   needs: [build-moab-img]
  #   runs-on: ubuntu-latest

  #   env:
  #     hdf5_versions: 1.10.4
  #     hdf5_build_dir: hdf5_build_dir

  #   strategy:
  #     matrix:
  #       ubuntu_versions : [
  #         16.04,
  #         18.04,
  #         ]
  #       compiler : [
  #         gcc,
  #         clang,
  #         ]
  #       hdf5_versions : [
  #        1.10.4,
  #       ]
  #       moab_versions : [
  #        9c96d17,
  #        develop,
  #        master,
  #       ]
  #       isPR: 
  #         - ${{ contains(github.event_name, 'pull_request') }}
  #       isMerged: 
  #         - ${{ contains(github.event_name, 'push') }}

  #   steps:
  #     - name: Environment setup
  #       run: |
  #         if [ "${{ matrix.isMerged }}" == "false" ]; then
  #           echo "root_name=dagmc_${{ github.sha }}" >> $GITHUB_ENV
  #         else
  #           echo "root_name=dagmc" >> $GITHUB_ENV
  #         fi
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1
  #     - name: Log in to the Container registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Download artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: svalinn/dagmc_${{ github.sha }}-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler }}-ext-hdf5_${{ matrix.hdf5_versions }}-moab_${{ matrix.moab_versions }}
  #         path: /tmp

  #     - name: Load image
  #       run: |
  #         docker load --input /tmp/svalinn/dagmc_${{ github.sha }}-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler }}-ext-hdf5_${{ matrix.hdf5_versions }}-moab_${{ matrix.moab_versions }}.tar
  #         docker image ls -a

  #     - name: Log in to the Container registry
  #       uses: docker/login-action@v1
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.repository_owner }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #       with:
  #         submodules: recursive

  #     - name: Setup
  #       if:  ${{ matrix.isPR }}
  #       run: |
  #         touch docker_env
  #         echo "MOAB_VERSION=${{ matrix.moab_versions }}" >> docker_env
  #         echo "COMPILER=${{ matrix.compiler }}" >> docker_env
  #         echo "HDF5_VERSION=${{ matrix.hdf5_versions }}" >> docker_env
  #         echo "REPO_SLUG=${GITHUB_REPOSITORY}" >> docker_env
  #         echo "PULL_REQUEST=$(echo  $GITHUB_REF | cut -d"/" -f3)" >> docker_env
  #         echo "DOUBLE_DOWN="OFF"" >> docker_env

  #         docker run -t $docker_img \
  #                    --env-file docker_env \
  #                    -v $$GITHUB_WORKSPACE:/root/build_dir/DAGMC \
  #                    -w /root/build_dir/DAGMC \
  #                    -c /bin/bash "CI/scripts/install.sh; CI/scripts/tests.sh"


  # clean_housekeeping_img:
  #   if: ${{ contains(github.event_name, 'pull_request') }}
  #   needs: housekeeping
  #   runs-on: ubuntu-latest
  #   env:
  #     hdf5_versions: 1.10.4
  #     hdf5_build_dir: hdf5_build_dir
  #   strategy:
  #     matrix:
  #       ubuntu_versions : [18.04,]
  #       isMerged: 
  #         - ${{ contains(github.event_name, 'push') }}
  #   steps:
  #     - uses: actions/delete-package-versions@v1
  #       with:
  #         package-name: svalinn/dagmc_tmp-ci-ubuntu-${{ matrix.ubuntu_versions }}-housekeeping


  # clean_deps_img:
  #   if: ${{ contains(github.event_name, 'pull_request') }}
  #   needs: test_img
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       ubuntu_versions : [
  #         18.04,
  #         20.04,
  #         ]
  #       compiler : [
  #         gcc,
  #         clang,
  #         ]
  #       hdf5_versions : [
  #         1.10.4,
  #       ]
  #       isMerged: 
  #         - ${{ contains(github.event_name, 'push') }}
  #   steps:
  #     - uses: actions/delete-package-versions@v1
  #       with:
  #         package-name: svalinn/dagmc_tmp-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}-ext-hdf5_${{ matrix.hdf5_versions}} 

  # clean_moab_img:
  #   if: ${{ contains(github.event_name, 'pull_request') }}
  #   needs: test_img
  #   runs-on: ubuntu-latest

  #   env:
  #     hdf5_versions: 1.10.4
  #     hdf5_build_dir: hdf5_build_dir

  #   strategy:
  #     matrix:
  #       ubuntu_versions : [
  #         16.04,
  #         18.04,
  #         ]
  #       compiler : [
  #         gcc,
  #         clang,
  #         ]
  #       hdf5_versions : [
  #        1.10.4,
  #       ]
  #       moab_versions : [
  #        9c96d17,
  #        develop,
  #        master,
  #       ]
  #       isPR: 
  #         - ${{ contains(github.event_name, 'pull_request') }}
  #   steps:
  #     - uses: actions/delete-package-versions@v1
  #       with:
  #         package-name: svalinn/dagmc_tmp-ci-ubuntu-${{ matrix.ubuntu_versions }}-${{ matrix.compiler}}-ext-hdf5_${{ matrix.hdf5_versions}}-moab_${{ matrix.moab_versions }}  