version: 2.1
# Executors:
# Alias the environment on which run the different jobs
# i.e. in this case, docker image in which the jobs will be run
# executors:
#     u16.04:
#         docker:
#             - image: svalinn/dagmc-ci-ubuntu-16.04:latest
#     u18.04:
#         docker:
#             - image: svalinn/dagmc-ci-ubuntu-18.04:latest



# Jobs part:
# Define the different job that will be ran this separate building form
# testing for each configuration allowing to get more information out of the CI
jobs:
  house_keeping:
    parameters:
      img:
        type: string
    docker: svalinn/dagmc-ci-ubuntu-<< parameters.img >>:latest
    steps:
      - checkout
      - run:
          name: Housekeeping
          command: CI/travis/housekeeping.sh
 
  # build_and_test:
  #   parameters:
  #     img: 
  #       type: executor
  #     compiler:
  #       type: string
  #     hdf5:
  #       type: string
  #     moab: 
  #       type: string
  #   executor: << parameters.img >>
  #   working_directory: /root/build/<< parameters.compiler >>/DAGMC-moab-<< paramters.moab >>-hdf5-<< paramters.hdf5 >>
  #   environment:
  #     COMPILER: << parameters.compiler >>
  #     HDF5_VERSION: << parameters.hdf5 >>
  #     MOAB_VERSION: << parameters.moab >>
  #     TRAVIS_REPO_SLUG: ${{ github.repository }}
  #     TRAVIS_PULL_REQUEST: ${{ github.event.number }} 

  #   steps:
  #     - checkout
  #     - run:
  #       name: building DAGMC
  #       command: CI/travis/install.sh
  #     - run:
  #       name: building DAGMC
  #       command: CI/travis/test.sh
  

# Workflow part:
# This part defines the list of the jobs that will be ran and in which sequence.
# The goal was to avoid running advanced configuration if PyNE does not work
# with limited amount of dependencies.
workflows:
  version: 2
  pull_request:
    jobs:
      - house_keeping:
          matrix:
            parameters:
              img: ["16.04", "18.04"]
          filters:
            branches:
              exclude: develop
      
      # - build_and_test:
      #     matrix:
      #       paramters:
      #         img: [ 16.04, 18.04]
      #         compiler: ["clang", "gcc"]
      #         hdf5: ["1.10.4"]
      #         moab: ["5.1.0"]
      #     filters:
      #       branches:
      #         pull_request: true
    